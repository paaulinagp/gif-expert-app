{"version":3,"sources":["components/AddCaterory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","img","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,4BAAKD,GACL,2BACEQ,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAMQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FACyEC,UAAUH,IADnF,SAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAK,SAACC,GAAD,YAAU,CAC/BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAPf,kBAUdM,GAVc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACtC,OACE,yBAAKc,UAAU,4DACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BACIA,KCHGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAM,SAAAC,GAEtBC,YAAW,WACTC,QAAQC,IAAI,aAAWH,GACvBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEJ,CAACpB,IAEGqB,EDjB0BQ,CAAa7B,GAAjCa,EADwB,EAC7BN,KAAaa,EADgB,EAChBA,QAIrB,OADAO,QAAQC,IAAI,UAAUR,GAEpB,oCACE,wBAAIJ,UAAU,uDAAuDhB,GACnEoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEXH,EAAOJ,KAAK,SAACqB,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAInB,IAAQmB,UEY3BE,EAxBM,WAAO,IAAD,EAEW9C,mBAAS,CAAC,iBAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAIzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEIS,EAAWe,KAAK,SAACT,GAAD,OACd,kBAAC,EAAD,CACE+B,IAAK/B,EACLA,SAAUA,UCdxBiC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b9901e97.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (event)=> {\n    event.preventDefault();\n    if(inputValue.trim().length > 0){\n      setCategories(categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <h1>{inputValue}</h1>\n      <input \n        type=\"text\" \n        value={inputValue}\n        onChange={handleInputChange }\n      />\n    </form>\n  )  \n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;","export const getGifs = async (category) => {\n  const url =`https://api.giphy.com/v1/gifs/search?api_key=4BnvcbsxEOoVInUE8HhNpT7NxafDQy1V&q=${encodeURI(category)}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map( (gif) => ({\n    id: gif.id,\n    title: gif.title,\n    url: gif.images?.downsized_medium.url\n  }) );\n\n  return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn animate__delay-3s\">\n      <img src={ url } alt={ title }/>\n      <p>\n        { title }\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => { \n  const { data:images, loading } = useFetchGifs(category);\n\n\n  console.log('state: ',loading)\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-2s\">{category}</h3>\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n      <div className=\"card-grid\">\n        {\n          images.map( (img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect} from \"react\";\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then( imgs => {\n\n      setTimeout(() => {\n        console.log('imgs-->', imgs)\n        setState({\n          data: imgs,\n          loading: false\n        });\n      }, 3000);\n    });\n  }, [category]);\n\n  return state;\n};","import React, {useState} from 'react';\nimport AddCategory from './components/AddCaterory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Harry Potter']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr/>\n      \n      <ol>\n        {\n          categories.map( (category) => (\n            <GifGrid \n              key={category}\n              category={category} \n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}